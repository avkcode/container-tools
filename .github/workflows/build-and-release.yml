name: Build and Release Container Images

# Triggers for the workflow
on:
  # Trigger on push to the main branch
  push:
    branches:
      - main
    paths:
      - '**'
  # Trigger manually from the GitHub Actions UI
  workflow_dispatch:

# Define environment variables
env:
  REGISTRY: docker.io
  IMAGE_NAME: debian11-base  # Default image name (can be overridden in jobs)
  DEBIAN_RELEASE: bullseye  # Default Debian release

# Jobs definition
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y debootstrap make curl unzip podman

      - name: Cache downloads
        uses: actions/cache@v3
        with:
          path: download
          key: ${{ runner.os }}-downloads-${{ hashFiles('**/Makefile') }}

  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - debian11
          - debian11-java-slim
          - debian11-graal-slim
          - debian11-nodejs-23.11.0
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore cached downloads
        uses: actions/cache@v3
        with:
          path: download
          key: ${{ runner.os }}-downloads-${{ hashFiles('**/Makefile') }}

      - name: Build image
        run: make ${{ matrix.target }}

      - name: Archive built image
        run: |
          mkdir -p dist
          tar -czvf dist/${{ matrix.target }}.tar.gz dist/${{ matrix.target }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: dist/${{ matrix.target }}.tar.gz

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: dist/

      - name: Extract artifact
        run: tar -xzvf dist/*.tar.gz -C dist/

      - name: Run structure tests
        run: make test

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only release from the main branch
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Load and push image
        run: |
          cat dist/*.tar | docker import - ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.${{ github.run_number }}
          body: "Automated release for commit ${{ github.sha }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
